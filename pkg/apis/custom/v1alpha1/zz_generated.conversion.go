// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	custom "github.com/programming-kubernetes/custom-apiserver/pkg/apis/custom"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Fischer)(nil), (*custom.Fischer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Fischer_To_custom_Fischer(a.(*Fischer), b.(*custom.Fischer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*custom.Fischer)(nil), (*Fischer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_Fischer_To_v1alpha1_Fischer(a.(*custom.Fischer), b.(*Fischer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FischerList)(nil), (*custom.FischerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FischerList_To_custom_FischerList(a.(*FischerList), b.(*custom.FischerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*custom.FischerList)(nil), (*FischerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_FischerList_To_v1alpha1_FischerList(a.(*custom.FischerList), b.(*FischerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Flunder)(nil), (*custom.Flunder)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Flunder_To_custom_Flunder(a.(*Flunder), b.(*custom.Flunder), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*custom.Flunder)(nil), (*Flunder)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_Flunder_To_v1alpha1_Flunder(a.(*custom.Flunder), b.(*Flunder), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlunderList)(nil), (*custom.FlunderList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlunderList_To_custom_FlunderList(a.(*FlunderList), b.(*custom.FlunderList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*custom.FlunderList)(nil), (*FlunderList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_FlunderList_To_v1alpha1_FlunderList(a.(*custom.FlunderList), b.(*FlunderList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlunderSpec)(nil), (*custom.FlunderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlunderSpec_To_custom_FlunderSpec(a.(*FlunderSpec), b.(*custom.FlunderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*custom.FlunderSpec)(nil), (*FlunderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_FlunderSpec_To_v1alpha1_FlunderSpec(a.(*custom.FlunderSpec), b.(*FlunderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlunderStatus)(nil), (*custom.FlunderStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlunderStatus_To_custom_FlunderStatus(a.(*FlunderStatus), b.(*custom.FlunderStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*custom.FlunderStatus)(nil), (*FlunderStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_FlunderStatus_To_v1alpha1_FlunderStatus(a.(*custom.FlunderStatus), b.(*FlunderStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*custom.FlunderSpec)(nil), (*FlunderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_custom_FlunderSpec_To_v1alpha1_FlunderSpec(a.(*custom.FlunderSpec), b.(*FlunderSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlunderSpec)(nil), (*custom.FlunderSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlunderSpec_To_custom_FlunderSpec(a.(*FlunderSpec), b.(*custom.FlunderSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Fischer_To_custom_Fischer(in *Fischer, out *custom.Fischer, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.DisallowedFlunders = *(*[]string)(unsafe.Pointer(&in.DisallowedFlunders))
	return nil
}

// Convert_v1alpha1_Fischer_To_custom_Fischer is an autogenerated conversion function.
func Convert_v1alpha1_Fischer_To_custom_Fischer(in *Fischer, out *custom.Fischer, s conversion.Scope) error {
	return autoConvert_v1alpha1_Fischer_To_custom_Fischer(in, out, s)
}

func autoConvert_custom_Fischer_To_v1alpha1_Fischer(in *custom.Fischer, out *Fischer, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.DisallowedFlunders = *(*[]string)(unsafe.Pointer(&in.DisallowedFlunders))
	return nil
}

// Convert_custom_Fischer_To_v1alpha1_Fischer is an autogenerated conversion function.
func Convert_custom_Fischer_To_v1alpha1_Fischer(in *custom.Fischer, out *Fischer, s conversion.Scope) error {
	return autoConvert_custom_Fischer_To_v1alpha1_Fischer(in, out, s)
}

func autoConvert_v1alpha1_FischerList_To_custom_FischerList(in *FischerList, out *custom.FischerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]custom.Fischer)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_FischerList_To_custom_FischerList is an autogenerated conversion function.
func Convert_v1alpha1_FischerList_To_custom_FischerList(in *FischerList, out *custom.FischerList, s conversion.Scope) error {
	return autoConvert_v1alpha1_FischerList_To_custom_FischerList(in, out, s)
}

func autoConvert_custom_FischerList_To_v1alpha1_FischerList(in *custom.FischerList, out *FischerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Fischer)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_custom_FischerList_To_v1alpha1_FischerList is an autogenerated conversion function.
func Convert_custom_FischerList_To_v1alpha1_FischerList(in *custom.FischerList, out *FischerList, s conversion.Scope) error {
	return autoConvert_custom_FischerList_To_v1alpha1_FischerList(in, out, s)
}

func autoConvert_v1alpha1_Flunder_To_custom_Flunder(in *Flunder, out *custom.Flunder, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_FlunderSpec_To_custom_FlunderSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_FlunderStatus_To_custom_FlunderStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Flunder_To_custom_Flunder is an autogenerated conversion function.
func Convert_v1alpha1_Flunder_To_custom_Flunder(in *Flunder, out *custom.Flunder, s conversion.Scope) error {
	return autoConvert_v1alpha1_Flunder_To_custom_Flunder(in, out, s)
}

func autoConvert_custom_Flunder_To_v1alpha1_Flunder(in *custom.Flunder, out *Flunder, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_custom_FlunderSpec_To_v1alpha1_FlunderSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_custom_FlunderStatus_To_v1alpha1_FlunderStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_custom_Flunder_To_v1alpha1_Flunder is an autogenerated conversion function.
func Convert_custom_Flunder_To_v1alpha1_Flunder(in *custom.Flunder, out *Flunder, s conversion.Scope) error {
	return autoConvert_custom_Flunder_To_v1alpha1_Flunder(in, out, s)
}

func autoConvert_v1alpha1_FlunderList_To_custom_FlunderList(in *FlunderList, out *custom.FlunderList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]custom.Flunder, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Flunder_To_custom_Flunder(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_FlunderList_To_custom_FlunderList is an autogenerated conversion function.
func Convert_v1alpha1_FlunderList_To_custom_FlunderList(in *FlunderList, out *custom.FlunderList, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlunderList_To_custom_FlunderList(in, out, s)
}

func autoConvert_custom_FlunderList_To_v1alpha1_FlunderList(in *custom.FlunderList, out *FlunderList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Flunder, len(*in))
		for i := range *in {
			if err := Convert_custom_Flunder_To_v1alpha1_Flunder(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_custom_FlunderList_To_v1alpha1_FlunderList is an autogenerated conversion function.
func Convert_custom_FlunderList_To_v1alpha1_FlunderList(in *custom.FlunderList, out *FlunderList, s conversion.Scope) error {
	return autoConvert_custom_FlunderList_To_v1alpha1_FlunderList(in, out, s)
}

func autoConvert_v1alpha1_FlunderSpec_To_custom_FlunderSpec(in *FlunderSpec, out *custom.FlunderSpec, s conversion.Scope) error {
	// WARNING: in.Reference requires manual conversion: does not exist in peer-type
	// WARNING: in.ReferenceType requires manual conversion: inconvertible types (*github.com/programming-kubernetes/custom-apiserver/pkg/apis/custom/v1alpha1.ReferenceType vs github.com/programming-kubernetes/custom-apiserver/pkg/apis/custom.ReferenceType)
	return nil
}

func autoConvert_custom_FlunderSpec_To_v1alpha1_FlunderSpec(in *custom.FlunderSpec, out *FlunderSpec, s conversion.Scope) error {
	// WARNING: in.FlunderReference requires manual conversion: does not exist in peer-type
	// WARNING: in.FischerReference requires manual conversion: does not exist in peer-type
	// WARNING: in.ReferenceType requires manual conversion: inconvertible types (github.com/programming-kubernetes/custom-apiserver/pkg/apis/custom.ReferenceType vs *github.com/programming-kubernetes/custom-apiserver/pkg/apis/custom/v1alpha1.ReferenceType)
	return nil
}

func autoConvert_v1alpha1_FlunderStatus_To_custom_FlunderStatus(in *FlunderStatus, out *custom.FlunderStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_FlunderStatus_To_custom_FlunderStatus is an autogenerated conversion function.
func Convert_v1alpha1_FlunderStatus_To_custom_FlunderStatus(in *FlunderStatus, out *custom.FlunderStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlunderStatus_To_custom_FlunderStatus(in, out, s)
}

func autoConvert_custom_FlunderStatus_To_v1alpha1_FlunderStatus(in *custom.FlunderStatus, out *FlunderStatus, s conversion.Scope) error {
	return nil
}

// Convert_custom_FlunderStatus_To_v1alpha1_FlunderStatus is an autogenerated conversion function.
func Convert_custom_FlunderStatus_To_v1alpha1_FlunderStatus(in *custom.FlunderStatus, out *FlunderStatus, s conversion.Scope) error {
	return autoConvert_custom_FlunderStatus_To_v1alpha1_FlunderStatus(in, out, s)
}
